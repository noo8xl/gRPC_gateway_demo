services:
  redis:
    image: redis:latest
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USERNAME=${REDIS_USERNAME}
    command: redis-server --requirepass ${REDIS_PASSWORD} --username ${REDIS_USERNAME}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - anvil-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 120s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "28"
          memory: 64G
    restart: unless-stopped

  gateway:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "30201:30201"
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USERNAME=${REDIS_USERNAME}
      #
      - REDIS_DB_PROFILE=${REDIS_DB_PROFILE}
      - REDIS_DB_BLOG=${REDIS_DB_BLOG}
      - REDIS_DB_OFFERS=${REDIS_DB_OFFERS}
      - REDIS_DB_ORDERS=${REDIS_DB_ORDERS}
      - REDIS_DB_REVIEWS=${REDIS_DB_REVIEWS}
      - REDIS_DB_PROMOTIONS=${REDIS_DB_PROMOTIONS}
      - REDIS_DB_2FA=${REDIS_DB_2FA}
      - REDIS_DB_NOTIFICATIONS=${REDIS_DB_NOTIFICATIONS}
      #
      - GO_ENV=production
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - anvil-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:30201/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "28"
          memory: 64G
    restart: unless-stopped

volumes:
  redis_data:

networks:
  anvil-network:
    driver: bridge
